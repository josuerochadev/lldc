/* ====== BOUTONS ====== */
@layer components {
  /* Bouton menu toggle */
  .menu-toggle-button {
    @apply inline-flex h-[44px] w-[44px] items-center justify-center rounded-btn bg-transparent text-title-sm font-semibold uppercase text-purple transition duration-250 focus:outline-none;
    -webkit-tap-highlight-color: transparent;
  }
  .menu-toggle-button:focus-visible {
    @apply focus-ring;
  }

  .menu-toggle-icon {
    @apply relative block h-5 w-6;
  }
  .menu-toggle-bar {
    @apply absolute left-0 right-0 h-[2px] bg-current transition duration-250;
  }
  .menu-toggle-bar--top {
    top: 0;
  }
  .menu-toggle-bar--middle {
    top: 50%;
    transform: translateY(-50%);
  }
  .menu-toggle-bar--bottom {
    bottom: 0;
  }
  .menu-toggle-button[data-state='open'] .menu-toggle-bar--top {
    transform: translateY(10px) rotate(45deg);
  }
  .menu-toggle-button[data-state='open'] .menu-toggle-bar--middle {
    opacity: 0;
  }
  .menu-toggle-button[data-state='open'] .menu-toggle-bar--bottom {
    transform: translateY(-10px) rotate(-45deg);
  }

  @media (prefers-reduced-motion: reduce) {
    .menu-toggle-button {
      transition-duration: 0.01ms !important;
    }
    .menu-toggle-button[data-state='open'] .menu-toggle-bar--top,
    .menu-toggle-button[data-state='open'] .menu-toggle-bar--bottom {
      transform: none !important;
    }
    .menu-toggle-button[data-state='open'] .menu-toggle-bar--middle {
      opacity: 1 !important;
    }
  }

  /* Bouton principal */
  .button-primary {
    @apply inline-flex items-center justify-center rounded-btn border border-dark-green/20 bg-dark-green px-btn-x py-btn-y text-text-cta font-semibold text-light-green focus:outline-none focus-visible:ring-2 focus-visible:ring-light-green;

    position: relative;
    cursor: pointer;
    user-select: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -webkit-tap-highlight-color: transparent;

    --btn-tilt-x: 4deg;
    --btn-tilt-y: 1deg;
    --btn-ty-hover: 2px;
    --btn-scale-hover: 1.015;
    --btn-ty-active: 3px;
    --btn-scale-active: 0.985;

    background-image:
      linear-gradient(
        to right,
        rgba(var(--color-dark-green-rgb), 0.8),
        rgba(var(--color-dark-green-rgb), 0)
      ),
      linear-gradient(
        to bottom,
        rgba(var(--color-dark-green-rgb), 0.8),
        rgba(var(--color-dark-green-rgb), 0)
      );
    background-position:
      bottom right,
      bottom right;
    background-size:
      100% 100%,
      100% 100%;
    background-repeat: no-repeat;

    box-shadow:
      inset -4px -10px 0px rgba(255, 255, 255, 0.1),
      inset -4px -8px 0px rgba(var(--color-dark-green-rgb), 0.4),
      0px 2px 1px rgba(var(--color-dark-green-rgb), 0.4),
      0px 2px 1px rgba(var(--color-light-green-rgb), 0.05);

    transition:
      transform 250ms,
      box-shadow 250ms,
      color 250ms,
      background-image 250ms;
  }

  .button-primary::before,
  .button-primary::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    z-index: -1;
    transition:
      box-shadow 100ms ease-in-out,
      background-image 100ms ease-in-out,
      opacity 100ms ease-in-out;
  }

  .button-primary::after {
    background-image: linear-gradient(
      to bottom,
      rgba(var(--color-light-green-rgb), 0.15),
      rgba(var(--color-dark-green-rgb), 0.3)
    );
    box-shadow:
      inset 4px 0px 0px rgba(var(--color-light-green-rgb), 0.05),
      inset 4px -8px 0px rgba(var(--color-dark-green-rgb), 0.4);
  }

  .button-primary::before {
    background-image:
      linear-gradient(
        to right,
        rgba(var(--color-dark-green-rgb), 0.6),
        rgba(var(--color-dark-green-rgb), 0)
      ),
      linear-gradient(
        to bottom,
        rgba(var(--color-dark-green-rgb), 0.6),
        rgba(var(--color-dark-green-rgb), 0)
      );
  }

  @media (hover: hover) {
    .button-primary:hover {
      transform: perspective(80px) rotateX(var(--btn-tilt-x)) rotateY(var(--btn-tilt-y))
        translateY(var(--btn-ty-hover)) scale(var(--btn-scale-hover));

      color: rgba(var(--color-light-green-rgb), 0.95);

      /* Petit renfort visuel comme une touche rétroéclairée */
      text-shadow: 0 1px 1px rgba(0, 0, 0, 0.25);
    }
    .button-primary:active {
      transform: perspective(80px) rotateX(calc(var(--btn-tilt-x) + 1deg))
        rotateY(var(--btn-tilt-y)) translateY(var(--btn-ty-active)) scale(var(--btn-scale-active));
      border: 1px solid rgba(var(--color-dark-green-rgb), 0.3);
      box-shadow:
        inset -4px -8px 0px rgba(var(--color-light-green-rgb), 0.1),
        inset -4px -6px 0px rgba(var(--color-dark-green-rgb), 0.7),
        0px 1px 0px rgba(var(--color-dark-green-rgb), 0.9),
        0px 1px 0px rgba(var(--color-light-green-rgb), 0.1);
      will-change: transform;
    }
  }

  .button-primary:active::before {
    background-color: rgba(var(--color-light-green-rgb), 0.1);
    animation: overlay 0.1s ease-in-out;
    pointer-events: none;
    top: 5%;
    left: 20%;
    width: 50%;
    height: 80%;
  }

  .button-primary:focus-visible {
    outline: none;
    --tw-ring-color: rgb(var(--color-light-green-rgb));
    box-shadow:
      0 0 0 3px rgba(var(--color-light-green-rgb), 0.6),
      inset -4px -10px 0px rgba(255, 255, 255, 0.1),
      inset -4px -8px 0px rgba(var(--color-dark-green-rgb), 0.4),
      0px 2px 1px rgba(var(--color-dark-green-rgb), 0.4),
      0px 2px 1px rgba(var(--color-light-green-rgb), 0.05);
  }

  @media (prefers-reduced-motion: reduce) {
    .button-primary,
    .button-primary:hover,
    .button-primary:active {
      transform: none !important;
      transition-duration: 0.01ms !important;
    }
    .button-primary:active::before {
      animation: none !important;
    }
  }

  .button-primary[data-variant='hero'],
  [data-cta-variant='hero'] .button-primary {
    --btn-tilt-x: 5deg;
    --btn-tilt-y: 1.5deg;
    --btn-ty-hover: 3px;
    --btn-scale-hover: 1.02;
    --btn-ty-active: 4px;
    --btn-scale-active: 0.96;
  }
}

/* Animations utilisées */
@keyframes overlay {
  from {
    opacity: 0;
    transform: scale(0.98);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}
@keyframes ripple {
  0%,
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) scale(0.9);
  }
}
