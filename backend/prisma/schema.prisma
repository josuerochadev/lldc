generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Optician {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

model Client {
  id           Int           @id @default(autoincrement())
  first_name   String
  last_name    String
  email        String        @unique
  phone        String
  appointments Appointment[]

  @@index([last_name])
}

model Appointment {
  id                      Int                   @id @default(autoincrement())
  client_id               Int
  appointment_date        DateTime
  status                  Status
  preferred_notification  PreferredNotification
  optician_notes          String?
  cancellation_token      String?               @unique
  second_reminder_enabled Boolean               @default(false)
  client                  Client                @relation(fields: [client_id], references: [id], onDelete: Cascade)
  notifications           Notification[]

  @@index([appointment_date])
  @@index([status])
}

model BlockedSlot {
  id         Int      @id @default(autoincrement())
  start_date DateTime
  end_date   DateTime

  @@index([start_date])
  @@index([end_date])
}

model Notification {
  id             Int              @id @default(autoincrement())
  appointment_id Int
  sent_at        DateTime         @default(now())
  type           NotificationType
  appointment    Appointment      @relation(fields: [appointment_id], references: [id], onDelete: Cascade)

  @@index([appointment_id])
  @@index([sent_at])
}

model ContactMessage {
  id              Int      @id @default(autoincrement())
  full_name       String   @db.VarChar(200)
  email           String   @db.VarChar(255)
  phone           String?  @db.VarChar(20)
  message_content String
  sent_at         DateTime @default(now())

  @@index([email])
}

model BlacklistedToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
}

enum Status {
  pending
  confirmed
  cancelled
}

enum PreferredNotification {
  email
  sms
  both
}

enum NotificationType {
  appointment_created_by_client
  appointment_created_by_optician
  appointment_accepted
  appointment_modified
  appointment_rejected
  appointment_cancelled_by_client
  reminder_24h
  reminder_2h
}
