// backend/prisma/.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  pending
  confirmed
  cancelled
}

enum PreferredNotification {
  email
  sms
  both
}

enum NotificationType {
  rappel
  confirmation
  modification
}

model Client {
  id         Int          @id @default(autoincrement())
  first_name String       @db.VarChar(100)
  last_name  String       @db.VarChar(100)
  email      String       @unique @db.VarChar(255)
  phone      String       @db.VarChar(20)

  appointments Appointment[]
}

model Appointment {
  id                     Int                   @id @default(autoincrement())
  clientId               Int
  appointment_date       DateTime
  status                 Status
  preferred_notification PreferredNotification
  optician_notes         String?  // facultatif

  client         Client       @relation(fields: [clientId], references: [id], onDelete: Cascade)
  notifications  Notification[]

  @@index([appointment_date])
}

model BlockedSlot {
  id         Int      @id @default(autoincrement())
  start_date DateTime
  end_date   DateTime

  @@index([start_date])
}

model Notification {
  id                 Int              @id @default(autoincrement())
  appointmentId      Int
  notification_date  DateTime
  type               NotificationType

  appointment        Appointment      @relation(fields: [appointmentId], references: [id], onDelete: Cascade)
}

model ContactMessage {
  id              Int       @id @default(autoincrement())
  full_name       String    @db.VarChar(200)
  email           String    @db.VarChar(255)
  phone           String?   @db.VarChar(20)
  message_content String
  sent_at         DateTime  @default(now())
}